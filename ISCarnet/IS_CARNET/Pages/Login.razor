@page "/login"

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

    <div class="login-page">
        <img src="img/logo.png" class="logo_middle">
        <button onclick="location.href = '/'" class="fixedButton">HOME</button>
        <div class="form">
            @if (string.IsNullOrEmpty(AdminState.CurrentUser))
            {

                <EditForm Model="@dto" OnValidSubmit="@SearchAccount">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <p>
                        <label for="username">Username:</label>
                        <InputText id="username" @bind-Value="dto.UserName"></InputText>
                    </p>

                    <p>
                        <label for="password">Password:</label>
                        <InputText type="password" id="password" @bind-Value="dto.Password"></InputText>
                    </p>
                    <button type="submit">Login</button>
                </EditForm>
            }
            else
            {
                <p>Sunteti deja logat ca administrator!</p>
            }
        </div>
    </div>
@if (loginAttempt)
{
    NavigationManager.NavigateTo("/");

}
@code {

    AccountDTO dto = new AccountDTO();
    Boolean loginAttempt = false;
    string username = "";
    string message = String.Empty;

    async Task ShowAlert(string error)
    {
        if (error == "Login reusit"){
            await JSRuntime.InvokeVoidAsync("createSuccess", error);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("createError", error);
        }
    }

    private async Task SearchAccount()
    {
        HttpClient Http = new HttpClient();
        HttpContent content = new StringContent(JsonConvert.SerializeObject(dto), Encoding.UTF8, "application/json");
        HttpResponseMessage h = await Http.PostAsync("https://localhost:44365/api/Accounts", content);
        if (h.IsSuccessStatusCode)
        {
            var responseJSON = h.Content.ReadAsStringAsync().Result;
            AccountDTO acc = JsonConvert.DeserializeObject<AccountDTO>(responseJSON);
            username = acc.UserName;
            State.CurrentUser = username;
            message = "Login reusit";
            this.StateHasChanged();


        }
        else
        {
            message = "Username sau parola incorecte!";
        }
        await ShowAlert(message);
        loginAttempt = true;

    }



}

