@page "/login"
<div class="form">
    <h1>LOGIN</h1>

    <EditForm Model="@dto" OnValidSubmit="@SearchAccount">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <p>
            <label for="username">Username:</label>
            <InputText id="username" @bind-Value="dto.UserName"></InputText>
        </p>

        <p>
            <label for="username">Password:</label>
            <InputText id="username" @bind-Value="dto.Password"></InputText>
        </p>
        <button type="submit">Login</button>
    </EditForm>
</div>
@if (loginAttempt)
{
    @if (username == null)
    {
        <p>Username sau parola incorecte!</p>
    }
    else
    {
        <p>Login reusit!</p>
    }
}
@code {
    AccountDTO dto = new AccountDTO();
    Boolean loginAttempt = false;
    string username = "";
    private async Task SearchAccount()
    {
        HttpClient Http = new HttpClient();
        HttpContent content = new StringContent(JsonConvert.SerializeObject(dto), Encoding.UTF8, "application/json");
        HttpResponseMessage h = await Http.PostAsync("https://localhost:44365/api/Accounts", content);
        var responseJSON = h.Content.ReadAsStringAsync().Result;
        AccountDTO acc = JsonConvert.DeserializeObject<AccountDTO>(responseJSON);
        username = acc.UserName;
        if (username != null)
        {
            State.CurrentUser = username;
        }
        loginAttempt = true;


    }
}
