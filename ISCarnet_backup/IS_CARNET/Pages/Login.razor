@page "/login"
<div class="form">
    @if (string.IsNullOrEmpty(AdminState.CurrentUser))
    {
        <h1>LOGIN</h1>

        <EditForm Model="@dto" OnValidSubmit="@SearchAccount">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <p>
                <label for="username">Username:</label>
                <InputText id="username" @bind-Value="dto.UserName"></InputText>
            </p>

            <p>
                <label for="password">Password:</label>
                <InputText type="password" id="password" @bind-Value="dto.Password"></InputText>
            </p>
            <button type="submit">Login</button>
        </EditForm>
    }
    else
    {
        <p>Sunteti deja logat ca administrator!</p>
    }
</div>
@if (loginAttempt)
{
    <p>@message</p>
}
@code {

    AccountDTO dto = new AccountDTO();
    Boolean loginAttempt = false;
    string username = "";
    string message = String.Empty;
    private async Task SearchAccount()
    {
        HttpClient Http = new HttpClient();
        HttpContent content = new StringContent(JsonConvert.SerializeObject(dto), Encoding.UTF8, "application/json");
        HttpResponseMessage h = await Http.PostAsync("https://localhost:44365/api/Accounts", content);
        if (h.IsSuccessStatusCode)
        {
            var responseJSON = h.Content.ReadAsStringAsync().Result;
            AccountDTO acc = JsonConvert.DeserializeObject<AccountDTO>(responseJSON);
            username = acc.UserName;
            State.CurrentUser = username;
            message = "Login reusit";
            this.StateHasChanged();


        }
        else
        {
            message = "Username sau parola incorecte!";
        }
        loginAttempt = true;

    }
}
